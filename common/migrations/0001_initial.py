# Generated by Django 3.0.9 on 2020-08-15 11:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly '
                                                               'assigning them.',
                                                     verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'},
                                              help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                                              max_length=150, unique=True,
                                              validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                                              verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff',
                 models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.',
                                     verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True,
                                                  help_text='Designates whether this user should be treated as active. Unselect '
                                                            'this instead of deleting accounts.',
                                                  verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True,
                                                  help_text='The groups this user belongs to. A user will get all permissions '
                                                            'granted to each of their groups.',
                                                  related_name='user_set', related_query_name='user', to='auth.Group',
                                                  verbose_name='groups')),
                ('user_permissions',
                 models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set',
                                        related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CentreResponsabilite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.DecimalField(decimal_places=0, max_digits=5)),
                ('nom', models.CharField(max_length=50)),
                (
                    'intitule',
                    models.CharField(
                        blank=True,
                        help_text='Nom complet du centre de responsabilité',
                        max_length=256,
                        null=True,
                        verbose_name='Intitulé',
                    ),
                ),
                ('cloture', models.DateTimeField(null=True, verbose_name='date de cloture du centre de responsabilité')),
            ],
            options={
                'verbose_name': 'centre de responsabilité',
                'verbose_name_plural': 'centres de responsabilité',
            },
        ),
        migrations.CreateModel(
            name='Etablissement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.DecimalField(decimal_places=0, max_digits=5)),
                ('prefix', models.CharField(max_length=4)),
                ('nom', models.CharField(max_length=50)),
                (
                    'intitule',
                    models.CharField(
                        blank=True, help_text="Nom complet de l'établissement", max_length=256, null=True, verbose_name='Intitulé'
                    ),
                ),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='date de modification')),
            ],
        ),
        migrations.CreateModel(
            name='ExtensionUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'titre',
                    models.CharField(
                        blank=True, help_text='M. / Mme / Mlle / Dr / Pr ...', max_length=32, null=True, verbose_name='Titre'
                    ),
                ),
                ('intitule_fonction', models.CharField(blank=True, max_length=256, null=True, verbose_name='Fonction (intitulé)')),
                (
                    'vocation_fonctionnelle',
                    models.CharField(
                        choices=[
                            ('ND', 'NON DEFINI'),
                            ('EQ', 'EQUIPEMENTS'),
                            ('LI', 'BLANCHISSERIE'),
                            ('LO', 'LOGISTIQUE'),
                            ('BE', 'ELECTRONIQUE'),
                            ('BI', 'INSTRUMENTATION'),
                            ('DE', 'STERILISATION'),
                            ('ST', 'SERVICES TECHNIQUES'),
                            ('SI', 'SECURITE INCENDIE'),
                            ('CQ', 'CONTROLE QUALITE'),
                            ('BM', 'BIOMEDICAL'),
                            ('IT', 'INFORMATIQUE'),
                            ('AM', 'AMORTISSEMENT'),
                        ],
                        default='ND',
                        max_length=3,
                    ),
                ),
                ('initiales', models.CharField(max_length=10)),
                ('tel_fixe', models.CharField(blank=True, max_length=17, verbose_name='Tél. fixe')),
                ('tel_dect', models.CharField(blank=True, max_length=17, verbose_name='Tél. DECT')),
                ('tel_mobile', models.CharField(blank=True, max_length=17, verbose_name='Tél. mobile')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='date de modification')),
                ('etablissement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.Etablissement')),
            ],
        ),
        migrations.CreateModel(
            name='Pole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.DecimalField(decimal_places=0, max_digits=5)),
                ('nom', models.CharField(max_length=50)),
                (
                    'intitule',
                    models.CharField(
                        blank=True, help_text='Nom complet du pôle', max_length=256, null=True, verbose_name='Intitulé'
                    ),
                ),
                ('cloture', models.DateTimeField(null=True, verbose_name='date de clôture du pole')),
            ],
            options={
                'verbose_name': 'pôle',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.DecimalField(decimal_places=0, max_digits=5)),
                ('nom', models.CharField(max_length=50)),
                (
                    'intitule',
                    models.CharField(
                        blank=True, help_text='Nom complet du service', max_length=256, null=True, verbose_name='Intitulé'
                    ),
                ),
                ('cloture', models.DateTimeField(null=True, verbose_name='date de clôture du service')),
            ],
            options={
                'verbose_name': 'service',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.DecimalField(decimal_places=0, max_digits=5)),
                ('nom', models.CharField(max_length=50)),
                (
                    'intitule',
                    models.CharField(
                        blank=True, help_text='Nom complet du site', max_length=256, null=True, verbose_name='Intitulé'
                    ),
                ),
                ('cloture', models.DateTimeField(null=True, verbose_name="date de clôture de l' établissement")),
            ],
        ),
        migrations.CreateModel(
            name='Uf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lettre_budget', models.CharField(max_length=1, verbose_name='Budget')),
                ('code', models.DecimalField(decimal_places=0, max_digits=5, verbose_name='N° UF')),
                ('nom', models.CharField(max_length=50, verbose_name='Nom UF')),
                (
                    'intitule',
                    models.CharField(
                        blank=True,
                        help_text="Nom complet de l'unité fonctionnelle",
                        max_length=256,
                        null=True,
                        verbose_name='Intitulé',
                    ),
                ),
                ('cloture', models.DateTimeField(null=True, verbose_name="date de clôture de l'UF")),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='date de modification')),
                (
                    'centre_responsabilite',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.CentreResponsabilite'),
                ),
                ('etablissement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Etablissement')),
                ('pole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Pole')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.Service')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Site')),
            ],
            options={
                'ordering': ['code'],
                'unique_together': {('etablissement', 'code')},
            },
        ),
        migrations.CreateModel(
            name='UserUfRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'role_code',
                    models.CharField(
                        choices=[
                            ('ACH', 'Acheteur'),
                            ('CAD', 'Cadre'),
                            ('CSP', 'Cadre supérieur de pôle'),
                            ('CADS', 'Cadre supérieur'),
                            ('CAP', 'Cadre administratif de pôle'),
                            ('AMAR', 'Assistante médico-administrative référente'),
                            ('CHP', 'Chef de pôle'),
                            ('CHS', 'Chef de service'),
                            ('RUN', "Responsable d'unité"),
                            ('ADCP', 'Adjoint au chef de pôle'),
                            ('DIR', 'Directeur adjoint'),
                            ('COP', 'Coordonateur de pôle'),
                            ('DRP', 'Directeur référent de pôle'),
                            ('RMA', 'Référent matériel'),
                        ],
                        max_length=5,
                    ),
                ),
                ('extension_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.ExtensionUser')),
                ('uf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Uf')),
            ],
            options={
                'verbose_name': 'rôle',
            },
        ),
        migrations.AddField(
            model_name='extensionuser',
            name='role',
            field=models.ManyToManyField(related_name='rn_role', through='common.UserUfRole', to='common.Uf'),
        ),
        migrations.AddField(
            model_name='extensionuser',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
